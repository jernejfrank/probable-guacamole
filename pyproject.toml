[project]
name = "probable-guacamole"
version = "0.1.0"
description = "Statistical Learning Pipelines"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "duckdb>=1.1.1",
    "lancedb>=0.6.3",
    "matplotlib>=3.9.2",
    "notebook>=7.2.2",
    "numpy>=2.1.2",
    "pandas>=2.2.3",
    "pandera>=0.20.4",
    "plotly>=5.24.1",
    "pyarrow>=17.0.0",
    "pydantic>=2.9.2",
    "pytorch-lightning>=2.4.0",
    "scikit-learn>=1.5.2",
    "scipy>=1.14.1",
    "sf-hamilton>=1.80.0",
    "statsmodels>=0.14.4",
    "torch==2.2.2",
    "torchmetrics>=1.4.3",
]

[project.urls]
Homepage = "https://jernejfrank.github.io/probable-guacamole/"
Repository = "https://github.com/jernejfrank/probable-guacamole"
Documentation = "https://jernejfrank.github.io/probable-guacamole/"
"Bug Tracker" = "https://github.com/jernejfrank/probable-guacamole/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "coverage[toml]>=7.6.2",
    "pre-commit>=4.0.1",
    "pyright>=1.1.384",
    "pytest-cov>=5.0.0",
    "pytest>=8.3.3",
    "ruff>=0.6.9",
]

[tool.pyright]
include = [
    "probable-guacamole"
  ]
exclude = [
  "tests",
  "docs"
]
venvPath = "."
venv = ".venv"



[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.paths]
source = ["probable-guacamole", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["probable-guacamole"]

[tool.coverage.report]
show_missing = true

[tool.ruff]
line-length = 88
indent-width = 4
fix = true

[tool.ruff.lint]
select = [
  "A",  # flake8-builtins
  "ANN",  # flake8-annotations
  "B",  # flake8-bugbear
  "BLE",  # flake8-blind-except
  "C4", # flake8-comprehensions
  "C",  # mccabe
  "D",  # flake8-docstrings
  "E", "F",  # flake8
  "FA",  # Verifies files use from __future__ import annotations if a type is used in the module that can be rewritten using PEP 563.
  "FURB", # Refurbishing and modernizing Python codebases
  "G",  # flake8-logging-format
  "I",  # isort
  "ISC",  # flake8-implicit-str-concat
  "LOG", # Checks for issues using the standard library logging module.
  "N",  # pep8-naming
  "NPY", # Linting rules for numpy
  "PERF",# Linting rules for performance
  "PGH", # pygrep-hooks
  "Q",   # Linting rules for quites
  "RUF",  # Ruff-specific rules
  "S",  # flake8-bandit
  "SIM",  # flake8-simplify
  "T10", # flake8-debugger
  "T20", # Check for Print statements in python files.
  "TCH", # Move type-only imports to a type-checking block.
  "TID", # Helps you write tidier imports.
  "TRY", # tryceratops
  "UP", # pyupgrade
  "W",   # pycodestyle warnings
  "YTT", # flake8-2020,
]

ignore = [
    "ANN101",
    "E731",
    "F403",
    "PGH003",
    "PGH004",
]

unfixable = [
  "ERA",  # Don't remove commented-out code
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
preview = true
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D100",
    "D103",
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
]
"__init__.py" = [
    "F401",
    "D104"
]
